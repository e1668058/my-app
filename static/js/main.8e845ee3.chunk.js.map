{"version":3,"sources":["components/Menu.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["Menu","scrollDuration","scrollStep","window","scrollY","scrollInterval","setInterval","scrollBy","clearInterval","class","type","id","href","Component","withRouter","Content","title","width","height","src","frameborder","scrolling","marginheight","marginwidth","App","path","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uUAIMA,G,0LAEUC,GACR,IAAIC,GAAcC,OAAOC,SAAWH,EAAiB,IACjDI,EAAiBC,aAAY,WACL,IAAnBH,OAAOC,QACRD,OAAOI,SAAU,EAAGL,GAEnBM,cAAcH,KACrB,M,+BAIF,OACI,yBAAKI,MAAM,kBAEP,2BAAOC,KAAK,WAAWC,GAAG,WAC1B,yBAAKF,MAAM,OACP,+BACA,+BACA,gCAGJ,yBAAKA,MAAM,MACP,4DAGJ,yBAAKA,MAAM,SAEP,uBAAGG,KAAK,YAAW,uCACnB,uBAAGA,KAAK,aAAY,uCACpB,uBAAGA,KAAK,QAAO,mD,GA/BhBC,cAsCJC,cAAWd,GCtCpBe,G,uLAIE,OACI,yBAAKN,MAAM,qBACP,yBAAKA,MAAM,SACP,6DAGJ,yBAAKA,MAAM,OACP,mCAKJ,yBAAKA,MAAM,QACP,gCAGJ,yBAAKA,MAAM,WACP,uCACA,yBAAKA,MAAM,kBAKX,yBAAKA,MAAM,kBAKX,yBAAKA,MAAM,kBAKX,yBAAKA,MAAM,mBAMf,yBAAKA,MAAM,QACP,gCAGJ,yBAAKA,MAAM,OAAOE,GAAG,UACjB,yBAAKF,MAAM,UAAUE,GAAG,WACpB,6BACI,uCACA,8EAEJ,6BACI,+CACA,uBAAGC,KAAK,oBAAR,oBAIR,yBAAKH,MAAM,YAAYE,GAAG,SACtB,oCAGJ,yBAAKF,MAAM,WAAWE,GAAG,YACrB,kDACA,yBAAKF,MAAM,OACP,4CACA,gDAEJ,yBAAKA,MAAM,OACP,yCACA,gDAEJ,yBAAKA,MAAM,OACP,yCACA,gDAEJ,yBAAKA,MAAM,OACP,4CACA,2CAEJ,yBAAKA,MAAM,OACP,yCACA,gDAEJ,yBAAKA,MAAM,OACP,4CACA,gDAEJ,yBAAKA,MAAM,OACP,0CACA,kDAMZ,yBAAKA,MAAM,MAAME,GAAG,OAChB,6CACA,yBAAKF,MAAM,YACP,yBAAKA,MAAM,eACP,4BAAQO,MAAM,YAAYC,MAAM,MAAMC,OAAO,MAAMP,GAAG,cAAcQ,IAAI,sIAAsIC,YAAY,IAAIC,UAAU,KAAKC,aAAa,IAAIC,YAAY,c,GArGhRV,cA+GPC,cAAWC,GCzEXS,G,uLAhCX,OACE,kBAAC,IAAD,KAEE,yBAAKf,MAAM,UAET,yBAAKA,MAAM,QACT,kBAAC,IAAD,CACEgB,KAAK,IACLC,OAAW,kBACT,kBAAC,EAAD,UAKN,yBAAKjB,MAAM,WACT,kBAAC,IAAD,CACEgB,KAAK,IACLC,OAAW,kBACT,kBAAC,EAAD,gB,GAtBEb,cCMEc,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCZNC,IAASL,OAAO,kBAAC,EAAD,MAASM,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8e845ee3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport '../styles/Menu.scss';\r\n\r\nclass Menu extends Component {\r\n    \r\n    scrollToTop(scrollDuration) {\r\n        var scrollStep = -window.scrollY / (scrollDuration / 15),\r\n            scrollInterval = setInterval(function(){\r\n            if ( window.scrollY !== 0 ) {\r\n                window.scrollBy( 0, scrollStep );\r\n            }\r\n            else clearInterval(scrollInterval); \r\n        },15);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"menu-container\">\r\n                \r\n                <input type=\"checkbox\" id=\"chkBar\"/>\r\n                <div class=\"bar\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n\r\n                <div class=\"Sl\">\r\n                    <p>Salon de coiffure Shang Long</p>\r\n                </div>\r\n\r\n                <div class=\"links\">\r\n                    {/* <a onClick={()=>{this.scrollToTop(1000)}}><p>Contact</p></a> */}\r\n                    <a href=\"#contact\"><p>Contact</p></a>\r\n                    <a href=\"#schedule\"><p>Horaire</p></a>\r\n                    <a href=\"#map\"><p>Itinéraire</p></a>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default withRouter(Menu);","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport '../styles/Content.scss';\r\n\r\nclass Content extends Component {\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <div class=\"content-container\">\r\n                <div class=\"title\">\r\n                    <h1>Salon de coiffure Shang Long</h1>\r\n                </div>\r\n\r\n                <div class=\"pic\">\r\n                    <picture>\r\n                        {/* <img alt=\"\" src=\"../../public/images/img1.jpg\"></img> */}\r\n                    </picture>\r\n                </div>\r\n\r\n                <div class=\"line\">\r\n                    <span></span>\r\n                </div>\r\n\r\n                <div class=\"gallery\">\r\n                    <h2>Galerie</h2>\r\n                    <div class=\"img-container\">\r\n                        {/* <img alt=\"\" src=\"./images/img9.jpg\"></img>\r\n                        <img alt=\"\" src=\"./images/img2.jpg\"></img> */}\r\n                        {/* <img src=\"./images/img3.jpg\"></img> */}\r\n                    </div>\r\n                    <div class=\"img-container\">\r\n                        {/* <img alt=\"\" src=\"./images/img4.jpg\"></img>\r\n                        <img alt=\"\" src=\"./images/img5.jpg\"></img> */}\r\n                        {/* <img src=\"./images/img6.jpg\"></img> */}\r\n                    </div>\r\n                    <div class=\"img-container\">\r\n                        {/* <img alt=\"\" src=\"./images/img7.jpg\"></img>\r\n                        <img alt=\"\" src=\"./images/img8.jpg\"></img> */}\r\n                        {/* <img src=\"./images/img9.jpg\"></img> */}\r\n                    </div>\r\n                    <div class=\"img-container\">\r\n                        {/* <img alt=\"\" src=\"./images/img3.jpg\"></img>\r\n                        <img alt=\"\" src=\"./images/img6.jpg\"></img> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"line\">\r\n                    <span></span>\r\n                </div>\r\n\r\n                <div class=\"info\" id=\"idInfo\">\r\n                    <div class=\"address\" id=\"contact\">\r\n                        <div>\r\n                            <h2>Address</h2>\r\n                            <p>1071 Rue Saint-Urbain, Montréal, QC H2Z 9Y9</p>\r\n                        </div>\r\n                        <div>\r\n                            <h2>Téléphone</h2>\r\n                            <a href=\"tel:514-826-1188\">(514) 826-1188</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"invisible\" id=\"line2\">\r\n                        <h2>WKA</h2>\r\n                    </div>\r\n\r\n                    <div class=\"schedule\" id=\"schedule\">\r\n                        <h2>Heures d'ouverture</h2>\r\n                        <div class=\"day\">\r\n                            <span>Dimanche :</span>\r\n                            <span>10h00 - 18h30</span>\r\n                        </div>\r\n                        <div class=\"day\">\r\n                            <span>Lundi :</span>\r\n                            <span>10h00 - 18h30</span>\r\n                        </div>\r\n                        <div class=\"day\">\r\n                            <span>Mardi :</span>\r\n                            <span>10h00 - 18h30</span>\r\n                        </div>\r\n                        <div class=\"day\">\r\n                            <span>Mercredi :</span>\r\n                            <span>Fermé</span>\r\n                        </div>\r\n                        <div class=\"day\">\r\n                            <span>Jeudi :</span>\r\n                            <span>10h00 - 18h30</span>\r\n                        </div>\r\n                        <div class=\"day\">\r\n                            <span>Vendredi :</span>\r\n                            <span>10h00 - 18h30</span>\r\n                        </div>\r\n                        <div class=\"day\">\r\n                            <span>Samedi :</span>\r\n                            <span>10h00 - 18h30</span>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"map\" id=\"map\">\r\n                    <h2>Itinéraire</h2>\r\n                    <div class=\"mapouter\">\r\n                        <div class=\"gmap_canvas\">\r\n                            <iframe title=\"googlemap\" width=\"600\" height=\"500\" id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=1071%20Rue%20Saint-Urbain%2C%20Montr%C3%A9al%2C%20QC%20H2Z%209Y9&t=&z=13&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe>\r\n                            {/* <a href=\"https://ytify.com\">ytify.com</a> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>   \r\n        )\r\n    }\r\n}\r\nexport default withRouter(Content);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Menu from './components/Menu';\nimport Content from './components/Content';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n\n    return(\n      <Router>\n\n        <div class=\"global\">\n        \n          <div class=\"menu\">\n            <Route\n              path=\"/\"\n              render = { ()=>\n                <Menu/>\n              }\n            />\n          </div>\n          \n          <div class=\"content\">\n            <Route\n              path=\"/\"\n              render = { ()=>\n                <Content/>\n              }\n            />\n          </div>\n\n              \n        </div>\n              \n      </Router>\n    )\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}